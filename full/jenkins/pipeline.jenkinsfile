#!/usr/bin/env groovy


pipeline {
    agent any
    
    /*
    environment {
        CI='true'
    }
    */

    tools {
        go 'Go-1.14'
    }

    options {
      disableConcurrentBuilds()
    }

    stages {
        stage('Preparation') {
            steps {
                checkout scm
            }
        }
        stage ('Compile') {
            steps {
                dir('full') {
                    sh "${root}/bin/go build"
                }
            }
        }
        stage ('Static Analysis'){
            steps {
                withEnv(["GOPATH=${WORKSPACE}", "PATH+GO=${root}/bin:${WORKSPACE}/bin", "GOBIN=${WORKSPACE}/bin"]){
                    sh "go get -u golang.org/x/lint/golint"

                    dir('full') {
                        try{
                            sh "golint ."
                            sh "go vet ."
                        } catch (err){
                            sh "echo static analyis failed.  See report"
                        }
                    }
                }
            }
        }
        stage ('Test') {
            steps {
                dir('full') {
                    withEnv(["GOPATH=${WORKSPACE}", "PATH+GO=${root}/bin:${WORKSPACE}/bin", "GOBIN=${WORKSPACE}/bin"]){
                        sh "go test -v ./... -coverprofile=coverage.txt -covermode count  > tests.out"
                            
                        // convert tests result
                        sh "go get github.com/t-yuki/gocover-cobertura"
                        sh "gocover-cobertura < coverage.txt > cobertura-coverage.xml"
                    
                        step([$class: 'CoberturaPublisher', coberturaReportFile: 'cobertura-coverage.xml'])
                    }
                }
            }
      }
    }

    post {
      always {

        dir('full') {
            archiveArtifacts '**/tests.out, **/cobertura-coverage.xml'
        }
        
        echo 'email job results'
        // emailext (
        //   body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
        //   recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
        //   subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}, Build ${env.BUILD_NUMBER}",
        //   to: "victor.parmar@usb.ch, joshy.cyriac@usb.ch"
        // )
      }
    }
}